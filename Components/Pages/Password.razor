@page "/password"

<PageTitle>Counter</PageTitle>

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<MudGrid Justify="Justify.Center" AlignItems="AlignItems.Center">

    <MudItem xs="12" Class="mb-4" Style="text-align: center;">
        <MudImage Src="icon-login.png" Alt="Login Image" Width="150" />
    </MudItem>

    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudText>Username</MudText>
                <MudTextField T="string" Required="true" RequiredError="User name is required!" />
                <MudText>Email</MudText>
                <MudTextField T="string" Required="true" RequiredError="Email is required!"
                              Validation="@(new EmailAddressAttribute() { ErrorMessage = "The email address is invalid" })" />
                <MudText>Password</MudText>
                <MudTextField T="string" HelperText="Choose a strong password" @ref="pwField1"
                              InputType="InputType.Password"
                              Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                              RequiredError="Password is required!" />
                <MudText>Password</MudText>
                <MudTextField T="string" HelperText="Repeat the password" InputType="InputType.Password"
                              Validation="@(new Func<string, string>(PasswordMatch))" />
            </MudForm>
        </MudPaper>
        <MudPaper Class="pa-4 mt-4" Style="text-align: center;">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false" OnClick="@(() => form.Validate())">Validate</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" DropShadow="false" OnClick="@(() => form.ResetAsync())" Class="mx-2">Reset</MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }

    private string PasswordMatch(string arg)
    {
        if (pwField1.Value != arg)
            return "Passwords don't match";
        return null;
    }

}