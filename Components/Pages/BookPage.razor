@page "/bookpage"
@using PartyBookingClient.Backend
@inject NavigationManager Navigation
@inject DatabaseStore Database

<PageTitle>Book Page</PageTitle>
<MudContainer MaxWidth="MaxWidth.Large">
    <MudGrid>
        <MudItem xs="12" sm="6">
            <MudSelect T="Area" @bind-Value="_area" Label="Venue" AnchorOrigin="Origin.BottomCenter">
                <MudSelectItem Value="@Area.KidsPlayArea">Kids Play Area</MudSelectItem>
                <MudSelectItem Value="@Area.FamilyEvent">Big Family Event</MudSelectItem>
                <MudSelectItem Value="@Area.ThemedKidsParty">Themed Kids Party</MudSelectItem>
            </MudSelect>
        </MudItem>

        <MudItem xs="12" sm="6">
            <MudSelect T="string" @bind-Value="_partySize" Label="Party of " AnchorOrigin="Origin.BottomCenter">
                <MudSelectItem Value="@("0 - 50 persons")" />
                <MudSelectItem Value="@("50 - 100 persons")" />
                <MudSelectItem Value="@("100 - 150 persons")" />
            </MudSelect>
        </MudItem>

        <MudItem xs="12" sm="6">
            <MudSelect T="string" @bind-Value="_floor" Label="Floor" AnchorOrigin="Origin.BottomCenter">
                <MudSelectItem Value="@("Floor 1")" />
                <MudSelectItem Value="@("Floor 2")" />
                <MudSelectItem Value="@("Floor 3")" />
            </MudSelect>
        </MudItem>


        <MudItem xs="12" sm="6">
            <MudDatePicker Label="Choose Date" @bind-Date="_date"
                           IsDateDisabledFunc="CheckDate"
                           AdditionalDateClassesFunc="RandomBusyDates"/>
        </MudItem>

        <MudItem xs="12" sm="6">
            <MudTimePicker Label="Start Time" @bind-Time="_startTime" />
        </MudItem>

        <MudItem xs="12" sm="6">
            <MudTimePicker Label="End Time" @bind-Time="_endTime"/>
        </MudItem>

        @if (_area != Area.KidsPlayArea)
        {
            <MudItem xs="12" sm="6">
                <MudSelect T="string" @bind-Value="_catering" Label="Catering" AnchorOrigin="Origin.BottomCenter" Required="true">
                    <MudSelectItem Value="@("No catering")" />
                    <MudSelectItem Value="@("MENU 1")" />
                    <MudSelectItem Value="@("MENU 2")" />
                    <MudSelectItem Value="@("MENU 3")" />
                </MudSelect>
            </MudItem>
        }

        <MudItem xs="12" sm="12">
            <MudRadioGroup @bind-Value="SelectedOption" >
                <MudRadio Value="@("Google Pay")" Color="Color.Primary">Pay with Google Pay</MudRadio>
                <MudRadio Value="@("Apple Pay")" Color="Color.Primary">Pay with Apple Pay</MudRadio>
                <MudRadio Value="@("Paypal")" Color="Color.Primary">Pay with Paypal</MudRadio>
                <MudRadio Value="@("Visa")" Color="Color.Primary">Pay with Visa</MudRadio>
            </MudRadioGroup>
        </MudItem>
        <MudItem xs="12" class="d-flex justify-center mt-4">
            @if(_partySize == null || _floor == null || SelectedOption == null || (_area != Area.KidsPlayArea && _catering == null))
            {
                <MudButton Variant="Variant.Filled" Disabled="true">Pay Now</MudButton>
            } 
            else
            {
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="ConfirmBooking">Pay Now</MudButton>
            }
        </MudItem>
    </MudGrid>
</MudContainer>

@code {

    private Area _area = Area.KidsPlayArea;
    private string _partySize;
    private string _floor;
    private DateTime? _date = DateTime.Today;
    private TimeSpan? _startTime = DateTime.Now.TimeOfDay;
    private TimeSpan? _endTime = DateTime.Now.TimeOfDay.Add(TimeSpan.FromHours(2));
    private string _catering;
    public string SelectedOption { get; set; }

    private enum Area
    {
        KidsPlayArea,
        FamilyEvent,
        ThemedKidsParty
    }

    private void ConfirmBooking()
    {
        var queryParams = new Dictionary<string, string>
        {
            { "area", _area.ToString() },
            { "partySize", _partySize ?? string.Empty },
            { "floor", _floor ?? string.Empty },
            { "date", _date?.ToString("yyyy-MM-dd") ?? string.Empty },
            { "startTime", _startTime?.ToString(@"hh\:mm") ?? string.Empty },
            { "endTime", _endTime?.ToString(@"hh\:mm") ?? string.Empty },
            { "catering", _catering ?? string.Empty },
            { "paymentMethod", SelectedOption ?? string.Empty }
        };

        Database.AddBooking(new BookingManagement.Booking
        {
            Date = _date,
            Floor = int.Parse(_floor.Replace("Floor ", "")),
            Id = Guid.NewGuid().ToString().Substring(0, 8),
            Name = Database.Username,
            PartySize = _partySize,
            PaymentType = SelectedOption,
            Time = _startTime,
            EndTime = _endTime,
            Venue = _area.ToString(),
            Catering = _catering ?? "N/A"
        });
        
        var query = string.Join("&", queryParams.Select(kvp => $"{kvp.Key}={Uri.EscapeDataString(kvp.Value)}"));
        Navigation.NavigateTo($"/confirmation?{query}");
    }

    public bool CheckDate(DateTime time)
    {
        if(time.Date < DateTime.Today) return true;
        return false;
    }

    public string RandomBusyDates(DateTime time)
    {
        return (Random.Shared.Next(0, 100) > 90 && time > DateTime.Today.Date) ? "yellow-text text-accent-4" : "";
    }
}